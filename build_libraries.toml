[versions]
bouncycastle = "1.67"
chucker = "3.2.0"
findaway = "8.2.0"
firebase_analytics = "18.0.0"
firebase_crashlytics = "17.3.0"
firebase_dynamic_links = "21.1.0"
google_auto_value = "1.7"
google_exoplayer = "r1.5.15"
google_failureaccess = "1.0.1"
google_guava = "32.1.2-android"
google_material = "1.9.0"
google_play_services_base = "18.2.0"
google_play_services_location = "21.0.1"
google_play_services_measurement_api = "21.3.0"
google_play_services_tasks = "18.0.2"
io7m_jfunctional = "1.3.0"
io7m_jnull = "1.0.2"
io7m_junreachable = "1.0.2"
irradia_fieldrush = "0.0.17"
irradia_mime = "1.1.1"
irradia_opds2 = "0.0.7"
jackson = "2.10.2"
jackson_kotlin = "2.9.9"
javax_annotation_api = "1.2-b01"
javax_annotations = "1.2-b01"
jcip = "1.0.2"
jcip_annotations = "1.0-1"
joda_time = "2.10.10"
kotlin = "1.8.20"
kotlin_coroutines = "1.3.7"
kxml = "2.3.0"
leak_canary = "2.1"
logback_android = "3.0.0"
logback_classic = "1.4.8"
mockwebserver = "4.9.0"
moshi = "1.8.0"
nano_httpd = "master-SNAPSHOT"
nano_httpd_nanolets = "master-SNAPSHOT"
nimbus_jose_jwt = "8.20"
nypl_audiobook = "6.7.0"
nypl_drm_adobe = "1.2.3"
nypl_drm_axis = "1.0.2"
nypl_drm_core = "1.2.3"
nypl_findaway = "6.1.0"
nypl_http = "0.0.24"
nypl_overdrive = "1.0.5"
nypl_pdf = "0.1.0"
nypl_readium = "0.30.0"
nypl_readium2 = "0.0.28"
nypl_theme = "0.0.3"
okhttp = "3.14.1"
okhttp3 = "4.9.0"
okio = "3.5.0"
orgjson = "20200518"
osgi_bundle_annotation = "1.0.0"
osgi_bundle_version_annotation = "1.0.0"
palace_audiobook = "11.0.0"
palace_drm_adobe = "1.2.7"
palace_drm_core = "1.2.7"
palace_findaway = "6.0.5"
palace_http = "1.1.0-SNAPSHOT"
palace_overdrive = "1.1.3"
palace_readium2 = "2.0.0"
pandora_bottom_navigator = "ec834b9"
picasso = "2.71828"
quicktheories = "0.26"
r2_lcp = "2.2.1"
r2_opds = "2.2.1"
r2_shared = "2.2.1"
r2_streamer = "2.2.1"
readium_lcp = "2.0.0"
retrofit2 = "2.8.1"
rxandroid = "2.1.1"
rxjava = "1.3.8"
rxjava2 = "2.2.21"
rxjava2_extensions = "0.20.10"
slf4j = "2.0.7"
transifex = "1.2.1"
truecommons = "2.5.0"
truevfs = "0.14.0"
ulid_generator = "1.0.0"
xmlpull = "1.1.3.1"

[libraries]
androidx_activity = { module = "androidx.activity:activity", version = "1.7.2" }
androidx_activity_ktx = { module = "androidx.activity:activity-ktx", version = "1.7.2" }
androidx_annotation = { module = "androidx.annotation:annotation", version = "1.6.0" }
androidx_app_compat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx_cardview = { module = "androidx.cardview:cardview", version = "1.0.0" }
androidx_constraint_layout = { module = "androidx.constraintlayout:constraintlayout", version = "2.1.4" }
androidx_coordinatorlayout = { module = "androidx.coordinatorlayout:coordinatorlayout", version = "1.2.0" }
androidx_core = { module = "androidx.core:core", version = "1.10.1" }
androidx_core_ktx = { module = "androidx.core:core-ktx", version = "1.10.1" }
androidx_customview = { module = "androidx.customview:customview", version = "1.1.0" }
androidx_drawerlayout = { module = "androidx.drawerlayout:drawerlayout", version = "1.2.0" }
androidx_fragment = { module = "androidx.fragment:fragment", version = "1.6.1" }
androidx_fragment_ktx = { module = "androidx.fragment:fragment-ktx", version = "1.6.1" }
androidx_fragment_testing = { module = "androidx.fragment:fragment-testing", version = "1.6.1" }
androidx_legacy_preference_v14 = { module = "androidx.legacy:legacy-preference-v14", version = "1.0.0" }
androidx_legacy_support_v4 = { module = "androidx.legacy:legacy-support-v4", version = "1.0.0" }
androidx_lifecycle_common = { module = "androidx.lifecycle:lifecycle-common", version = "2.6.1" }
androidx_lifecycle_extensions = { module = "androidx.lifecycle:lifecycle-extensions", version = "2.2.0" }
androidx_lifecycle_livedata = { module = "androidx.lifecycle:lifecycle-livedata", version = "2.6.1" }
androidx_lifecycle_livedata_core = { module = "androidx.lifecycle:lifecycle-livedata-core", version = "2.6.1" }
androidx_lifecycle_livedata_core_ktx = { module = "androidx.lifecycle:lifecycle-livedata-core-ktx", version = "2.6.1" }
androidx_lifecycle_livedata_ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version = "2.6.1" }
androidx_lifecycle_viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version = "2.6.1" }
androidx_lifecycle_viewmodel_savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version = "2.6.1" }
androidx_media = { module = "androidx.media:media", version = "1.6.0" }
androidx_multidex = { module = "androidx.multidex:multidex", version = "2.0.1" }
androidx_navigation_fragment = { module = "androidx.navigation:navigation-fragment-ktx", version = "2.7.1" }
androidx_navigation_ui = { module = "androidx.navigation:navigation-ui-ktx", version = "2.7.1" }
androidx_paging_common = { module = "androidx.paging:paging-common", version = "3.2.0" }
androidx_paging_common_ktx = { module = "androidx.paging:paging-common-ktx", version = "3.2.0" }
androidx_paging_runtime = { module = "androidx.paging:paging-runtime", version = "3.2.0" }
androidx_paging_runtime_ktx = { module = "androidx.paging:paging-runtime-ktx", version = "3.2.0" }
androidx_preference = { module = "androidx.preference:preference", version = "1.2.1" }
androidx_preference_ktx = { module = "androidx.preference:preference-ktx", version = "1.2.1" }
androidx_recycler_view = { module = "androidx.recyclerview:recyclerview", version = "1.3.1" }
androidx_savedstate = { module = "androidx.savedstate:savedstate", version = "1.2.1" }
androidx_swiperefresh_layout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version = "1.1.0" }
androidx_test_espresso = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
androidx_test_espresso_core = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
androidx_test_ext_junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidx_test_extensions = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidx_test_orchestrator = { module = "androidx.test:orchestrator", version = "1.4.2" }
androidx_test_rules = { module = "androidx.test:rules", version = "1.5.0" }
androidx_test_runner = { module = "androidx.test:runner", version = "1.5.2" }
androidx_view_pager2 = { module = "androidx.viewpager2:viewpager2", version = "1.0.0" }
androidx_webkit = { module = "androidx.webkit:webkit", version = "1.7.0" }

#------------------------------------------------------------------------
# Roboelectric
#------------------------------------------------------------------------
robolectric = { module = "org.robolectric:robolectric", version = "4.9.2" }
robolectric_annotations = { module = "org.robolectric:annotations", version = "4.9.2" }
robolectric_junit = { module = "org.robolectric:junit", version = "4.9.2" }
robolectric_pluginapi = { module = "org.robolectric:pluginapi", version = "4.9.2" }
robolectric_plugins_maven_dependency_resolver = { module = "org.robolectric:plugins-maven-dependency-resolver", version = "4.9.2" }
robolectric_resources = { module = "org.robolectric:resources", version = "4.9.2" }
robolectric_sandbox = { module = "org.robolectric:sandbox", version = "4.9.2" }
robolectric_shadowapi = { module = "org.robolectric:shadowapi", version = "4.9.2" }
robolectric_shadows_framework = { module = "org.robolectric:shadows-framework", version = "4.9.2" }
robolectric_utils = { module = "org.robolectric:utils", version = "4.9.2" }
robolectric_utils_reflector = { module = "org.robolectric:utils-reflector", version = "4.9.2" }
apiguardian = { module = "org.apiguardian:apiguardian-api", version = "1.1.2" }
javax_inject = { module = "javax.inject:javax.inject", version = "1" }

#------------------------------------------------------------------------
# JUnit
#------------------------------------------------------------------------
junit = { module = "junit:junit", version = "4.13.2" }
junit_jupiter_vintage = { module = "org.junit.vintage:junit-vintage-engine", version = "5.10.0" }
junit_platform_commons = { module = "org.junit.platform:junit-platform-commons", version = "1.9.3" }
junit_jupiter_api = { module = "org.junit.jupiter:junit-jupiter-api", version = "5.7.1" }
junit_jupiter_engine = { module = "org.junit.jupiter:junit-jupiter-engine", version = "5.7.1" }
opentest = { module = "org.opentest4j:opentest4j", version = "1.3.0" }

#------------------------------------------------------------------------
# Mockito
#------------------------------------------------------------------------
mockito_core = { module = "org.mockito:mockito-core", version = "5.5.0" }
mockito_android = { module = "org.mockito:mockito-android", version = "5.5.0" }
mockito_kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "3.2.0" }
bytebuddy = { module = "net.bytebuddy:byte-buddy", version = "1.14.7" }
bytebuddy_agent = { module = "net.bytebuddy:byte-buddy-agent", version = "1.14.7" }
objenesis = { module = "org.objenesis:objenesis", version = "3.3" }

#------------------------------------------------------------------------
# rxjava and reactive streams.
#------------------------------------------------------------------------
rxjava = { module = "io.reactivex:rxjava", version.ref = "rxjava" }
rxjava2 = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava2" }
rxjava2_extensions = { module = "com.github.akarnokd:rxjava2-extensions", version.ref = "rxjava2_extensions" }
reactive_streams = { module = "org.reactivestreams:reactive-streams", version = "1.0.4" }

#------------------------------------------------------------------------
# Jackson JSON.
#------------------------------------------------------------------------
jackson_core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson_databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson_annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson_kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson_kotlin" }

#------------------------------------------------------------------------
# Irradia components.
#------------------------------------------------------------------------
irradia_fieldrush_api = { module = "one.irradia.fieldrush:one.irradia.fieldrush.api", version.ref = "irradia_fieldrush" }
irradia_fieldrush_vanilla = { module = "one.irradia.fieldrush:one.irradia.fieldrush.vanilla", version.ref = "irradia_fieldrush" }
irradia_mime_api = { module = "one.irradia.mime:one.irradia.mime.api", version.ref = "irradia_mime" }
irradia_mime_vanilla = { module = "one.irradia.mime:one.irradia.mime.vanilla", version.ref = "irradia_mime" }
irradia_opds2_api = { module = "one.irradia.opds2_0:one.irradia.opds2_0.api", version.ref = "irradia_opds2" }
irradia_opds2_lexical = { module = "one.irradia.opds2_0:one.irradia.opds2_0.lexical", version.ref = "irradia_opds2" }
irradia_opds2_librarysimplified = { module = "one.irradia.opds2_0:one.irradia.opds2_0.library_simplified.api", version.ref = "irradia_opds2" }
irradia_opds2_parser_api = { module = "one.irradia.opds2_0:one.irradia.opds2_0.parser.api", version.ref = "irradia_opds2" }
irradia_opds2_parser_extension_spi = { module = "one.irradia.opds2_0:one.irradia.opds2_0.parser.extension.spi", version.ref = "irradia_opds2" }
irradia_opds2_parser_librarysimplified = { module = "one.irradia.opds2_0:one.irradia.opds2_0.parser.extension.library_simplified", version.ref = "irradia_opds2" }
irradia_opds2_parser_vanilla = { module = "one.irradia.opds2_0:one.irradia.opds2_0.parser.vanilla", version.ref = "irradia_opds2" }

#------------------------------------------------------------------------
# Palace Audiobook components.
#------------------------------------------------------------------------
palace_audiobook_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.api", version.ref = "palace_audiobook" }
palace_audiobook_downloads = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.downloads", version.ref = "palace_audiobook" }
palace_audiobook_feedbooks = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.feedbooks", version.ref = "palace_audiobook" }
palace_audiobook_http = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.http", version.ref = "palace_audiobook" }
palace_audiobook_lcp = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.lcp", version.ref = "palace_audiobook" }
palace_audiobook_lcp_license_status = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.lcp.license_status", version.ref = "palace_audiobook" }
palace_audiobook_license_check_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.license_check.api", version.ref = "palace_audiobook" }
palace_audiobook_license_check_spi = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.license_check.spi", version.ref = "palace_audiobook" }
palace_audiobook_manifest_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest.api", version.ref = "palace_audiobook" }
palace_audiobook_manifest_fulfill_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_fulfill.api", version.ref = "palace_audiobook" }
palace_audiobook_manifest_fulfill_basic = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_fulfill.basic", version.ref = "palace_audiobook" }
palace_audiobook_manifest_fulfill_opa = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_fulfill.opa", version.ref = "palace_audiobook" }
palace_audiobook_manifest_fulfill_spi = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_fulfill.spi", version.ref = "palace_audiobook" }
palace_audiobook_manifest_license_check_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.license_check.api", version.ref = "palace_audiobook" }
palace_audiobook_manifest_parser_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_parser.api", version.ref = "palace_audiobook" }
palace_audiobook_manifest_parser_extension_spi = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_parser.extension_spi", version.ref = "palace_audiobook" }
palace_audiobook_manifest_parser_webpub = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.manifest_parser.webpub", version.ref = "palace_audiobook" }
palace_audiobook_open_access = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.open_access", version.ref = "palace_audiobook" }
palace_audiobook_parser_api = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.parser.api", version.ref = "palace_audiobook" }
palace_audiobook_rbdigital = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.rbdigital", version.ref = "palace_audiobook" }
palace_audiobook_views = { module = "org.thepalaceproject.audiobook:org.librarysimplified.audiobook.views", version.ref = "palace_audiobook" }

bouncycastle = { module = "org.bouncycastle:bcpg-jdk15on", version.ref = "bouncycastle" }
bouncycastle_PKI = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncycastle" }
bouncycastle_TLS = { module = "org.bouncycastle:bctls-jdk15on", version.ref = "bouncycastle" }
chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
findaway = { module = "io.audioengine.mobile:all-android", version.ref = "findaway" }
firebase_analytics = { module = "com.google.firebase:firebase-analytics", version.ref = "firebase_analytics" }
firebase_crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebase_crashlytics" }
firebase_dynamic_links_ktx = { module = "com.google.firebase:firebase-dynamic-links-ktx", version = "21.1.0" }
firebase_dynamic_links = { module = "com.google.firebase:firebase-dynamic-links", version = "21.1.0" }
google_auto_value = { module = "com.google.auto.value:auto-value-annotations", version.ref = "google_auto_value" }
google_auto_value_processor = { module = "com.google.auto.value:auto-value", version.ref = "google_auto_value" }
google_exoplayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "google_exoplayer" }
google_failureaccess = { module = "com.google.guava:failureaccess", version.ref = "google_failureaccess" }
google_guava = { module = "com.google.guava:guava", version.ref = "google_guava" }
google_material = { module = "com.google.android.material:material", version.ref = "google_material" }
google_play_services_base = { module = "com.google.android.gms:play-services-base", version.ref = "google_play_services_base" }
google_play_services_location = { module = "com.google.android.gms:play-services-location", version.ref = "google_play_services_location" }
google_play_services_measurement_api = { module = "com.google.android.gms:play-services-measurement-api", version.ref = "google_play_services_measurement_api" }
google_play_services_tasks = { module = "com.google.android.gms:play-services-tasks", version.ref = "google_play_services_tasks" }
hamcrest = { module = "org.hamcrest:hamcrest", version = "2.2" }
io7m_jfunctional = { module = "com.io7m.jfunctional:io7m-jfunctional-core", version.ref = "io7m_jfunctional" }
io7m_jnull = { module = "com.io7m.jnull:io7m-jnull-core", version.ref = "io7m_jnull" }
io7m_junreachable = { module = "com.io7m.junreachable:io7m-junreachable-core", version.ref = "io7m_junreachable" }
javax_annotation_api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax_annotations" }
jcip = { module = "com.io7m.jcip:jcip-annotations", version.ref = "jcip" }
jcip_annotations = { module = "com.github.stephenc.jcip:jcip-annotations", version.ref = "jcip_annotations" }
joda_time = { module = "joda-time:joda-time", version.ref = "joda_time" }
kotlin_coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin_coroutines" }
kotlin_coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin_coroutines" }
kotlin_reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin_stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kxml = { module = "net.sf.kxml:kxml2", version.ref = "kxml" }
leak_canary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leak_canary" }
logback_android = { module = "com.github.tony19:logback-android", version.ref = "logback_android" }
logback_classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback_classic" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi_kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
nano_httpd = { module = "com.github.readium.nanohttpd:nanohttpd", version.ref = "nano_httpd" }
nano_httpd_nanolets = { module = "com.github.readium.nanohttpd:nanohttpd-nanolets", version.ref = "nano_httpd_nanolets" }
nimbus_jose_jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus_jose_jwt" }
nypl_drm_adobe = { module = "org.librarysimplified.drm.adobe:org.librarysimplified.drm.adobe.provider", version.ref = "nypl_drm_adobe" }
nypl_drm_axis = { module = "org.librarysimplified.drm.axis:org.librarysimplified.drm.axis.provider", version.ref = "nypl_drm_axis" }
nypl_drm_core = { module = "org.librarysimplified.drm:org.librarysimplified.drm.core", version.ref = "nypl_drm_core" }
nypl_overdrive = { module = "org.librarysimplified.audiobook.overdrive:org.librarysimplified.audiobook.overdrive.main", version.ref = "nypl_overdrive" }
nypl_pdf_api = { module = "edu.umn.minitex.pdf:edu.umn.minitex.pdf.api", version.ref = "nypl_pdf" }
nypl_pdf_viewer = { module = "edu.umn.minitex.pdf:edu.umn.minitex.pdf.pdfviewer", version.ref = "nypl_pdf" }
nypl_readium = { module = "org.librarysimplified:org.librarysimplified.readium", version.ref = "nypl_readium" }
nypl_theme = { module = "org.librarysimplified.android.theme:org.librarysimplified.android.theme", version.ref = "nypl_theme" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp3_logging_interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }
okhttp3_mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
org_json = { module = "org.json:json", version.ref = "orgjson" }
osgi_bundle_annotation = { module = "org.osgi:org.osgi.annotation.bundle", version.ref = "osgi_bundle_annotation" }
osgi_bundle_version_annotation = { module = "org.osgi:org.osgi.annotation.versioning", version.ref = "osgi_bundle_version_annotation" }

palace_drm_adobe = { module = "org.thepalaceproject.drm.adobe:org.librarysimplified.drm.adobe.provider", version.ref = "palace_drm_adobe" }
palace_drm_core = { module = "org.thepalaceproject.drm:org.librarysimplified.drm.core", version.ref = "palace_drm_core" }
palace_findaway = { module = "org.thepalaceproject.audiobook.audioengine:org.librarysimplified.audiobook.audioengine.core", version.ref = "palace_findaway" }
palace_http_api = { module = "org.thepalaceproject.http:org.librarysimplified.http.api", version.ref = "palace_http" }
palace_http_bearer_token = { module = "org.thepalaceproject.http:org.librarysimplified.http.bearer_token", version.ref = "palace_http" }
palace_http_downloads = { module = "org.thepalaceproject.http:org.librarysimplified.http.downloads", version.ref = "palace_http" }
palace_http_refresh_token = { module = "org.thepalaceproject.http:org.librarysimplified.http.refresh_token", version.ref = "palace_http" }
palace_http_uri = { module = "org.thepalaceproject.http:org.librarysimplified.http.uri_builder", version.ref = "palace_http" }
palace_http_vanilla = { module = "org.thepalaceproject.http:org.librarysimplified.http.vanilla", version.ref = "palace_http" }
palace_overdrive = { module = "org.thepalaceproject.audiobook.overdrive:org.librarysimplified.audiobook.overdrive.main", version.ref = "palace_overdrive" }
palace_readium2_api = { module = "org.thepalaceproject.r2:org.librarysimplified.r2.api", version.ref = "palace_readium2" }
palace_readium2_vanilla = { module = "org.thepalaceproject.r2:org.librarysimplified.r2.vanilla", version.ref = "palace_readium2" }
palace_readium2_views = { module = "org.thepalaceproject.r2:org.librarysimplified.r2.views", version.ref = "palace_readium2" }
pandora_bottom_navigator = { module = "com.github.qnga:BottomNavigator", version.ref = "pandora_bottom_navigator" }
picasso = { module = "com.squareup.picasso:picasso", version.ref = "picasso" }
quicktheories = { module = "org.quicktheories:quicktheories", version.ref = "quicktheories" }
r2_lcp = { module = "com.github.readium.kotlin-toolkit:readium-lcp", version.ref = "r2_lcp" }
r2_opds = { module = "com.github.readium.kotlin-toolkit:readium-opds", version.ref = "r2_opds" }
r2_shared = { module = "com.github.readium.kotlin-toolkit:readium-shared", version.ref = "r2_shared" }
r2_streamer = { module = "com.github.readium.kotlin-toolkit:readium-streamer", version.ref = "r2_streamer" }
readium_lcp = { module = "readium:liblcp", version.ref = "readium_lcp" }
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2_moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit2" }
rxandroid2 = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroid" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
transifex_sdk = { module = "com.transifex.txnative:txsdk", version.ref = "transifex" }
truecommons_key_disable = { module = "net.java.truecommons:truecommons-key-disable", version.ref = "truecommons" }
truecommons_shed = { module = "net.java.truecommons:truecommons-shed", version.ref = "truecommons" }
truevfs_access = { module = "net.java.truevfs:truevfs-access", version.ref = "truevfs" }
truevfs_driver_zip = { module = "net.java.truevfs:truevfs-driver-zip", version.ref = "truevfs" }
truevfs_kernel_spec = { module = "net.java.truevfs:truevfs-kernel-spec", version.ref = "truevfs" }
ulid_generator = { module = "com.aallam.ulid:ulid-kotlin", version.ref = "ulid_generator" }
xmlpull = { module = "xmlpull:xmlpull", version.ref = "xmlpull" }
